#edit-mode: -*- python -*-
#coding:gbk

#工作路径.
WORKROOT('../../../')

#使用硬链接copy.
CopyUsingHardLink(True)

#支持32位/64位平台编译
#ENABLE_MULTI_LIBS(True)

#C预处理器参数.
CPPFLAGS('-D_GNU_SOURCE -D__STDC_LIMIT_MACROS -DVERSION=\\\"0.0.0.1\\\"')
#为32位目标编译指定额外的预处理参数
#CPPFLAGS_32('-D_XOPEN_SOURE=500')

#C编译参数.
CFLAGS('-g -pipe -W -Wall -fPIC')

#C++编译参数.
CXXFLAGS('-g -pipe -W -Wall -Werror -fPIC')

PROTOC('../../../third-64/protobuf/bin/protoc')

#链接参数.
LDFLAGS('-lpthread -lcrypto -lrt -lz')

#依赖模块
CONFIGS('public/sofa-pbrpc@trunk@comake')
CONFIGS('third-64/gtest@1.6.0.100')
CONFIGS('third-64/gflags@gflags_2-0-0-100_PD_BL')
CONFIGS('third-64/leveldb@base')
CONFIGS('third-64/tcmalloc@base')

INCPATHS('. ./src ./output/include')

ins_sources = 'server/ins_main.cc server/ins_node_impl.cc server/flags.cc storage/meta.cc common/logging.cc storage/binlog.cc proto/ins_node.proto'

ins_sdk_sources = 'sdk/ins_sdk.cc common/logging.cc proto/ins_node.proto server/flags.cc'

ins_cli_sources = 'sdk/ins_sdk.cc proto/ins_node.proto common/logging.cc sdk/ins_cli.cc server/flags.cc'
sample_sources = 'sdk/sample.cc'


binlog_test_sources = 'storage/binlog.cc storage/binlog_test.cc common/logging.cc proto/ins_node.proto' 
Application('ins', Sources(ins_sources))
Application('ins_cli', Sources(ins_cli_sources))
SharedLibrary('ins_sdk', Sources(ins_sdk_sources), LinkDeps(True))
StaticLibrary('ins_sdk', Sources(ins_sdk_sources))

Application('binlog_test', Sources(binlog_test_sources))
Application('sample', Sources(sample_sources), Libraries('libins_sdk.a'))


